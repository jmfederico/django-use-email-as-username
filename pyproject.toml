[project]
authors = [
    {name = "Federico Jaramillo Martinez", email = "federicojaramillom@gmail.com"},
]
requires-python = ">=3.7"
dependencies = [
    "django",
]
name = "django-use-email-as-username"
version = "1.4.0"
description = "A Django app to use email as username for user authentication."
readme = "README.rst"
keywords = [
    "django",
    "email",
    "auth",
    "username",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Framework :: Django",
    "Framework :: Django :: 3.2",
    "Framework :: Django :: 4.0",
    "Framework :: Django :: 4.1",
    "Framework :: Django :: 4.2",
    "Framework :: Django :: 5.0",
    "Framework :: Django :: 5.1",
    "Framework :: Django :: 5.2",
    "Intended Audience :: Developers",
    "Natural Language :: English",
]
license = {text = "BSD-3-Clause"}

[project.urls]
repository = "https://github.com/jmfederico/django-use-email-as-username"

[project.optional-dependencies]
# Abuse extras to make testing easier with TOX
testing = [
    "codecov",
    "coverage",
]


[tool.pdm.dev-dependencies]
dev = [
    "sphinx",
    "sphinx-autobuild",
    "sphinx-rtd-theme",
]

[tool.pdm.build]
includes = [
    "django_use_email_as_username",
]

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"


[tool.pdm.scripts]
coverage = {shell = """
    coverage run --source django_use_email_as_username runtests.py && \
    coverage report -m && \
    coverage html && \
    open htmlcov/index.html
""", help="check code coverage quickly with the default Python"}

docs = {shell = """
	rm -f docs/django-use-email-as-username.rst
	rm -f docs/modules.rst
	make -C docs clean
	make -C docs html
	open docs/_build/html/index.html
""", help="generate Sphinx HTML documentation"}

clean_build = {shell = """
	rm -fr build/
	rm -fr dist/
	rm -fr *.egg-info
""", help="remove build artifacts"}

clean_pyc = {shell = """
	find . -type f -name '*.pyc' -exec rm -f {} +
	find . -type f -name '*.pyo' -exec rm -f {} +
	find . -type d -name '__pycache__' -exec rm -rf {} +
	find . -name '*~' -exec rm -f {} +
""", help="remove Python file artifacts"}

clean = {composite = ["clean_build", "clean_pyc"]}
